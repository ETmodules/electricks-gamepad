{"entries":[{"timestamp":1736688798247,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"EtGamepad_setGroup\"><field name=\"group\">EtGamepad.Group.Group1</field></block></statement"],[1,"www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\""],[0,"></b"]],"start1":12,"start2":12,"length1":237,"length2":103},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"EtGamepad.setGroup(EtGamepad.Group.Group1)"],[0,"\n"]],"start1":0,"start2":0,"length1":43,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"pxt-gamepad\": \"github:etmodules/pxt-gamepad#09225111cc12fb3c3c31168d7e567bce22d68ca6\""],[0,"\n"],[1,""],[0,"    "]],"start1":145,"start2":145,"length1":105,"length2":9},{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"blocksprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":242,"start2":242,"length1":36,"length2":31}]}]},{"timestamp":1736689137708,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":353,"start2":353,"length1":17,"length2":21}]}]},{"timestamp":1736692160101,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"pad#"],[-1,"896eccfa675fcafdd888c376ca2336621d192c38"],[1,"09225111cc12fb3c3c31168d7e567bce22d68ca6"],[0,"\"\n  "]],"start1":200,"start2":200,"length1":48,"length2":48}]}]},{"timestamp":1736692165854,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"36"],[1,"0"],[0,"\" y=\""],[-1,"66"],[1,"0"],[0,"\"><s"]],"start1":104,"start2":104,"length1":17,"length2":15},{"diffs":[[0,"ld><"],[-1,"next><block type=\"basic_show_icon\"><field name=\"i\">IconNames.Heart</field></block></next></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"45\" y=\"274\"><field name=\"button\">EtGamepad.Button.Button1</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.North</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"40\" y=\"416\"><field name=\"button\">EtGamepad.Button.Button2</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.North</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"34\" y=\"558\"><field name=\"button\">EtGamepad.Button.Button12</field><statement name=\"HANDLER\"><block type=\"basic_show_icon\"><field name=\"i\">IconNames.No</field><"],[0,"/blo"]],"start1":223,"start2":223,"length1":923,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"EtGamepad.onButtonPressed(EtGamepad.Button.Button12, function () {\n    basic.showIcon(IconNames.No)\n})\nEtGamepad.onButtonPressed(EtGamepad.Button.Button2, function () {\n    basic.showArrow(ArrowNames.North)\n})\nEtGamepad.onButtonPressed(EtGamepad.Button.Button1, function () {\n    basic.showArrow(ArrowNames.North)\n})\n"],[0,"EtGa"]],"start1":0,"start2":0,"length1":321,"length2":4},{"diffs":[[0,"p1)\n"],[-1,"basic.showIcon(IconNames.Heart)\n"]],"start1":39,"start2":39,"length1":36,"length2":4}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"hub:"],[-1,"ET"],[1,"et"],[0,"modu"]],"start1":178,"start2":178,"length1":10,"length2":10},{"diffs":[[0,"pad#"],[-1,"c3c6cc937b720353dbb13ef09e0794d630046dda"],[1,"896eccfa675fcafdd888c376ca2336621d192c38"],[0,"\"\n  "]],"start1":200,"start2":200,"length1":48,"length2":48}]}]},{"timestamp":1736692554249,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"0"],[1,"36"],[0,"\" y=\""],[-1,"0"],[1,"66"],[0,"\"><s"]],"start1":104,"start2":104,"length1":15,"length2":17},{"diffs":[[0," x=\""],[-1,"9"],[1,"45"],[0,"\" y=\"2"],[-1,"08"],[1,"74"],[0,"\"><f"]],"start1":385,"start2":385,"length1":17,"length2":18},{"diffs":[[0,".Button1"],[-1,"1"],[0,"</field>"]],"start1":438,"start2":438,"length1":17,"length2":16},{"diffs":[[0,"x=\"4"],[1,"0"],[0,"\" y=\""],[-1,"350"],[1,"416"],[0,"\"><f"]],"start1":684,"start2":684,"length1":16,"length2":17},{"diffs":[[0," x=\""],[-1,"-2"],[1,"34"],[0,"\" y=\""],[-1,"492"],[1,"558"],[0,"\"><f"]],"start1":981,"start2":981,"length1":18,"length2":18}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"tton"],[-1,"11"],[1,"2"],[0,", fu"]],"start1":148,"start2":148,"length1":10,"length2":9},{"diffs":[[0,"ad.Button.Button"],[-1,"2"],[1,"1"],[0,", function () {\n"]],"start1":243,"start2":243,"length1":33,"length2":33}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"block"],[1,"t"],[0,"sprj\"\n}\n"]],"start1":353,"start2":353,"length1":21,"length2":17}]}]},{"timestamp":1736692838601,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"hub:"],[-1,"et"],[1,"ET"],[0,"modu"]],"start1":178,"start2":178,"length1":10,"length2":10},{"diffs":[[0,"pad#"],[-1,"40540e9f6e36a0c409ef19975654f515"],[1,"c3c6cc937b720353dbb13ef09e"],[0,"07"],[1,"9"],[0,"4d"],[-1,"f0ee"],[1,"630046dda"],[0,"\"\n  "]],"start1":200,"start2":200,"length1":48,"length2":48},{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":353,"start2":353,"length1":17,"length2":21}]}]},{"timestamp":1736693405878,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"pad#"],[-1,"fe0c30b9f384c44af7202c0d7d7d3ddb1b461ad6"],[1,"40540e9f6e36a0c409ef19975654f515074df0ee"],[0,"\"\n  "]],"start1":200,"start2":200,"length1":48,"length2":48}]}]},{"timestamp":1736694443894,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"block"],[1,"t"],[0,"sprj\"\n}\n"]],"start1":353,"start2":353,"length1":21,"length2":17}]}]},{"timestamp":1736694486383,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"-8"],[1,"4"],[0,"\" y=\"3"],[-1,"49"],[1,"50"],[0,"\"><f"]],"start1":681,"start2":681,"length1":18,"length2":17}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"hub:"],[-1,"ET"],[1,"et"],[0,"modu"]],"start1":178,"start2":178,"length1":10,"length2":10},{"diffs":[[0,"pad#"],[-1,"a63b9e84225c5677d0f2db7095f440681769049f"],[1,"fe0c30b9f384c44af7202c0d7d7d3ddb1b461ad6"],[0,"\"\n  "]],"start1":200,"start2":200,"length1":48,"length2":48},{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":353,"start2":353,"length1":17,"length2":21}]}]},{"timestamp":1736694864266,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"hub:"],[-1,"et"],[1,"ET"],[0,"modu"]],"start1":178,"start2":178,"length1":10,"length2":10},{"diffs":[[0,"pad#"],[-1,"4d3da1e01a7b1de3b4182315d4a92fb364d8a1cc"],[1,"a63b9e84225c5677d0f2db7095f440681769049f"],[0,"\"\n  "]],"start1":200,"start2":200,"length1":48,"length2":48}]}]},{"timestamp":1736695236376,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"ad#4"],[-1,"99032d4e62a44a12cab76c45f671168a9be9208"],[1,"d3da1e01a7b1de3b4182315d4a92fb364d8a1cc"],[0,"\"\n  "]],"start1":201,"start2":201,"length1":47,"length2":47}]}]},{"timestamp":1736695797053,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"hub:"],[-1,"ET"],[1,"et"],[0,"modu"]],"start1":178,"start2":178,"length1":10,"length2":10},{"diffs":[[0,"pad#"],[-1,"ac5f6099dcc972ef29a7045772f4dd177f7b5ddb"],[1,"499032d4e62a44a12cab76c45f671168a9be9208"],[0,"\"\n  "]],"start1":200,"start2":200,"length1":48,"length2":48}]}]},{"timestamp":1736696340433,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"-4"],[1,"9"],[0,"\" y=\"20"],[-1,"1"],[1,"8"],[0,"\"><f"]],"start1":383,"start2":383,"length1":18,"length2":17},{"diffs":[[0,".Button1"],[1,"1"],[0,"</field>"]],"start1":435,"start2":435,"length1":16,"length2":17},{"diffs":[[0,"x=\"-"],[-1,"4"],[1,"8"],[0,"\" y=\"34"],[-1,"5"],[1,"9"],[0,"\"><f"]],"start1":682,"start2":682,"length1":17,"length2":17},{"diffs":[[0,"mes."],[-1,"Sou"],[1,"Nor"],[0,"th</"]],"start1":878,"start2":878,"length1":11,"length2":11}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"n.Button"],[-1,"2"],[1,"11"],[0,", functi"]],"start1":144,"start2":144,"length1":17,"length2":18},{"diffs":[[0,"mes."],[-1,"Sou"],[1,"Nor"],[0,"th)\n"]],"start1":197,"start2":197,"length1":11,"length2":11},{"diffs":[[0,"n.Button"],[-1,"1"],[1,"2"],[0,", functi"]],"start1":252,"start2":252,"length1":17,"length2":17}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"hub:"],[-1,"et"],[1,"ET"],[0,"modu"]],"start1":178,"start2":178,"length1":10,"length2":10},{"diffs":[[0,"pad#"],[-1,"7653aa3977a41734b67ae0b55aa561f67cc91dc4"],[1,"ac5f6099dcc972ef29a7045772f4dd177f7b5ddb"],[0,"\"\n  "]],"start1":200,"start2":200,"length1":48,"length2":48},{"diffs":[[0,"itor\": \""],[-1,"block"],[1,"t"],[0,"sprj\"\n}\n"]],"start1":353,"start2":353,"length1":21,"length2":17}]}]},{"timestamp":1736696775765,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":353,"start2":353,"length1":17,"length2":21}]}]},{"timestamp":1737190469583,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"pad#"],[-1,"078183733350984609554d8d371e9f60b480bc3b"],[1,"7653aa3977a41734b67ae0b55aa561f67cc91dc4"],[0,"\"\n  "]],"start1":200,"start2":200,"length1":48,"length2":48}]}]},{"timestamp":1737190522181,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"pins.digitalWritePin(DigitalPin.P0, 1)\npins.digitalWritePin(DigitalPin.P1, 1)\npins.digitalWritePin(DigitalPin.P2, 1)\npins.digitalWritePin(DigitalPin.P8, 1)\npins.digitalWritePin(DigitalPin.P9, 1)\npins.digitalWritePin(DigitalPin.P11, 1)\npins.digitalWritePin(DigitalPin.P12, 1)\npins.digitalWritePin(DigitalPin.P13, 1)\npins.digitalWritePin(DigitalPin.P14, 1)\npins.digitalWritePin(DigitalPin.P15, 1)\npins.digitalWritePin(DigitalPin.P16, 1)\n\npins.setPull(DigitalPin.P0, PinPullMode.PullUp)\npins.setPull(DigitalPin.P1, PinPullMode.PullUp)\npins.setPull(DigitalPin.P2, PinPullMode.PullUp)\npins.setPull(DigitalPin.P5, PinPullMode.PullUp)\npins.setPull(DigitalPin.P8, PinPullMode.PullUp)\npins.setPull(DigitalPin.P9, PinPullMode.PullUp)\npins.setPull(DigitalPin.P11, PinPullMode.PullUp)\npins.setPull(DigitalPin.P12, PinPullMode.PullUp)\npins.setPull(DigitalPin.P13, PinPullMode.PullUp)\npins.setPull(DigitalPin.P14, PinPullMode.PullUp)\npins.setPull(DigitalPin.P15, PinPullMode.PullUp)\npins.setPull(DigitalPin.P16, PinPullMode.PullUp)\n\nlet DELAY = 500\nlet TIME: number = 0\nlet PINPRESSED: number = 0\n\nfunction buttonPin(button: Gamepad): number {\n    let pin = 0;\n    switch (button) {\n        case Gamepad.Button1: pin = DigitalPin.P13; break;\n        case Gamepad.Button2: pin = DigitalPin.P15; break;\n        case "],[1,"EtGamepad.onButtonPressed(EtGamepad.Button.Button12, function () {\n    basic.showIcon(IconNames.No)\n})\nEt"],[0,"Gamepad."],[1,"on"],[0,"Button"],[-1,"3: pin = DigitalPin.P1; break;\n        case Gamepad.Button4: pin = DigitalPin.P12; break;\n        case Gamepad.Button5: pin = DigitalPin.P16; break;\n        case Gamepad.Button6: pin = DigitalPin.P2; break;\n        case Gamepad.Button7: pin = DigitalPin.P8; break;\n        case Gamepad.Button8: pin = DigitalPin.P14; break;\n        case Gamepad.Button9: pin = DigitalPin.P9; break;\n        case "],[1,"Pressed(EtGamepad.Button.Button2, function () {\n    basic.showArrow(ArrowNames.South)\n})\nEt"],[0,"Gamepad."],[1,"on"],[0,"Button"],[-1,"10: pin = DigitalPin.P0; break;\n        case Gamepad.Button11: pin = DigitalPin.P5; break;\n        case Gamepad.Button12: pin = DigitalPin.P11; break;\n    }\n    return pin;\n}\n\nfunction checkButtonPressed(button: Gamepad) {\n    let pin = buttonPin(button);\n    if (pins.digitalReadPin(pin) == 1)\n        return\n    if (PINPRESSED == pin && TIME > input.runningTime())\n        return\n    TIME = input.runningTime() + DELAY\n    PINPRESSED = pin\n    radio.sendNumber(button)\n}\n\nbasic.forever(function () {\n    for (let i = Gamepad.Button1; i <= Gamepad.Button12; i++)\n        checkButtonPressed(i)\n})\n\n//% block=\"set repeating time to $delay msec\"\n//% block.loc.nl=\"stel herhaaltijd in op $delay msec\"\n//% delay.defl=500\nfunction buttonDelay(delay: number) {\n    DELAY = delay\n}"],[1,"Pressed(EtGamepad.Button.Button1, function () {\n    basic.showArrow(ArrowNames.North)\n})\nEtGamepad.setGroup(EtGamepad.Group.Group1)\nbasic.showIcon(IconNames.Heart)"],[0,"\n"]],"start1":0,"start2":0,"length1":2498,"length2":392}]}]},{"timestamp":1737191244470,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"ne\": \"*\""],[1,",\n        \"pxt-gamepad\": \"github:etmodules/pxt-gamepad#078183733350984609554d8d371e9f60b480bc3b\""],[0,"\n    },\n"]],"start1":141,"start2":141,"length1":16,"length2":112}]}]},{"timestamp":1737191453574,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"= 0\n"],[-1,"\n"],[0,"let "],[1,"PIN"],[0,"PRESSED"],[-1," = [false, false, false, false,\n               false, false, false, false,\n               false, false, false, false]"],[1,": number = 0"],[0,"\n\nfu"]],"start1":1052,"start2":1052,"length1":137,"length2":34},{"diffs":[[0,"Pin(button: "],[-1,"EtGamepad."],[0,"Gamepad): nu"]],"start1":1099,"start2":1099,"length1":34,"length2":24},{"diffs":[[0,"       case "],[-1,"EtGamepad."],[0,"Gamepad.Butt"]],"start1":1170,"start2":1170,"length1":34,"length2":24},{"diffs":[[0,"       case "],[-1,"EtGamepad."],[0,"Gamepad.Butt"]],"start1":1229,"start2":1229,"length1":34,"length2":24},{"diffs":[[0,"       case "],[-1,"EtGamepad."],[0,"Gamepad.Butt"]],"start1":1288,"start2":1288,"length1":34,"length2":24},{"diffs":[[0,"       case "],[-1,"EtGamepad."],[0,"Gamepad.Butt"]],"start1":1346,"start2":1346,"length1":34,"length2":24},{"diffs":[[0,"       case "],[-1,"EtGamepad."],[0,"Gamepad.Butt"]],"start1":1405,"start2":1405,"length1":34,"length2":24},{"diffs":[[0,"       case "],[-1,"EtGamepad."],[0,"Gamepad.Butt"]],"start1":1464,"start2":1464,"length1":34,"length2":24},{"diffs":[[0,"       case "],[-1,"EtGamepad."],[0,"Gamepad.Butt"]],"start1":1522,"start2":1522,"length1":34,"length2":24},{"diffs":[[0,"       case "],[-1,"EtGamepad."],[0,"Gamepad.Butt"]],"start1":1580,"start2":1580,"length1":34,"length2":24},{"diffs":[[0,"       case "],[-1,"EtGamepad."],[0,"Gamepad.Butt"]],"start1":1639,"start2":1639,"length1":34,"length2":24},{"diffs":[[0,"       case "],[-1,"EtGamepad."],[0,"Gamepad.Butt"]],"start1":1697,"start2":1697,"length1":34,"length2":24},{"diffs":[[0,"       case "],[-1,"EtGamepad."],[0,"Gamepad.Butt"]],"start1":1756,"start2":1756,"length1":34,"length2":24},{"diffs":[[0,"   case "],[-1,"EtGamepad."],[0,"Gamepad."]],"start1":1819,"start2":1819,"length1":26,"length2":16},{"diffs":[[0,"on: "],[-1,"Et"],[0,"Gamepad"],[-1,".Gamepad) {\n    if (TIME > input.runningTime())\n        return\n    TIME = input.runningTime() + DELAY\n    let pin = buttonPin(button);\n    let newstate = pins.digitalReadPin(pin)\n    let oldstate = "],[1,") {\n    let pin = buttonPin(button);\n    if (pins.digitalReadPin(pin) == 1)\n        return\n    if (PINPRESSED == pin && TIME > input.runningTime())\n        return\n    TIME = input.runningTime() + DELAY\n    PINPRESSED = pin"],[0,"\n   "]],"start1":1931,"start2":1931,"length1":215,"length2":237},{"diffs":[[0,"let i = "],[-1,"EtGamepad."],[0,"Gamepad."]],"start1":2234,"start2":2234,"length1":26,"length2":16},{"diffs":[[0," <= "],[-1,"EtGamepad."],[0,"Game"]],"start1":2260,"start2":2260,"length1":18,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"pxt-gamepad\": \"github:etmodules/pxt-gamepad#82c93accc17664eb6f42e05986ce19f016752518\""],[0,"\n   "]],"start1":145,"start2":145,"length1":104,"length2":8}]}]},{"timestamp":1737192051513,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"let GROUP = 0\nlet DELAY = 500\nlet TIME: number = 0\nlet PRESSED = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n\n"],[0,"pins"]],"start1":0,"start2":0,"length1":107,"length2":4},{"diffs":[[0,"ullUp)\n\n"],[1,"let DELAY = 500\nlet TIME: number = 0\n\nlet PRESSED = [false, false, false, false,\n               false, false, false, false,\n               false, false, false, false]\n\n"],[0,"function"]],"start1":1011,"start2":1011,"length1":16,"length2":184},{"diffs":[[0,"e = "],[-1,"PRESSED[button]\n    if (oldstate == newstate)\n        return\n    PRESSED[button] = newstate\n    if (newstate)\n        radio.sendNumber(button) // pressed\n    radio.sendNumber(EtGamepad.Gamepad.Button12 + button) //released"],[1,"\n    radio.sendNumber(button)"],[0,"\n}\n\n"]],"start1":2371,"start2":2371,"length1":230,"length2":37},{"diffs":[[0,"})\n\n"],[-1,"input.onButtonPressed(Button.A, function () {\n\n})\n\ninput.onButtonPressed(Button.B, function () {\n\n})\n\n"],[0,"//% "]],"start1":2548,"start2":2548,"length1":110,"length2":8}]}]},{"timestamp":1737192632497,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"GROUP = "],[-1,"EtGamepad.Group.Group1"],[1,"0"],[0,"\nlet DEL"]],"start1":4,"start2":4,"length1":38,"length2":17},{"diffs":[[0,"0]\n\n"],[-1,"basic.showNumber(GROUP+1)\n\n"],[0,"pins"]],"start1":99,"start2":99,"length1":35,"length2":8},{"diffs":[[0,"sed\n"],[-1,"basic.showNumber(button)\n//"],[0,"    "]],"start1":2460,"start2":2460,"length1":35,"length2":8},{"diffs":[[0,") {\n"],[-1,"    GROUP -= 1\n    if (GROUP < EtGamepad.Group.Group1)\n        GROUP = EtGamepad.Group.Group9\n    EtGamepad.setGroup(GROUP)\n    basic.showNumber(GROUP+1)\n})\n\ninput.onButtonPressed(Button.B, function () {\n    GROUP += 1\n    if (GROUP > EtGamepad.Group.Group9)\n        GROUP = EtGamepad.Group.Group1\n    EtGamepad.setGroup(GROUP)\n    basic.showNumber(GROUP+1)"],[1,"\n})\n\ninput.onButtonPressed(Button.B, function () {\n"],[0,"\n})\n"]],"start1":2722,"start2":2722,"length1":365,"length2":59}]}]},{"timestamp":1737193185575,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," = ["],[-1,"1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1"],[1,"0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"],[0,"]\n\nb"]],"start1":83,"start2":83,"length1":42,"length2":42},{"diffs":[[0,"unction "],[-1,"buttonState"],[1,"checkButtonPressed"],[0,"(button:"]],"start1":2116,"start2":2116,"length1":27,"length2":34},{"diffs":[[0,"urn\n"],[-1,"basic.showNumber(button)\nreturn\n"],[0,"    "]],"start1":2415,"start2":2415,"length1":40,"length2":8},{"diffs":[[0,"ber("],[-1,"EtGamepad.Gamepad.Button12 + "],[0,"butt"]],"start1":2489,"start2":2489,"length1":37,"length2":8},{"diffs":[[0," // "],[1,"p"],[0,"re"],[-1,"leased\n    radio.sendNumber("],[1,"ssed\nbasic.showNumber(button)\n//    radio.sendNumber(EtGamepad.Gamepad.Button12 + "],[0,"butt"]],"start1":2500,"start2":2500,"length1":38,"length2":93},{"diffs":[[0,"+ button) //"],[-1," pres"],[1,"relea"],[0,"sed\n}\n\nbasic"]],"start1":2587,"start2":2587,"length1":29,"length2":29},{"diffs":[[0,"    "],[-1,"buttonState"],[1,"checkButtonPressed"],[0,"(i)\n"]],"start1":2725,"start2":2725,"length1":19,"length2":26},{"diffs":[[0,"input.on"],[-1,"Pi"],[1,"Butto"],[0,"nPressed"]],"start1":2755,"start2":2755,"length1":18,"length2":21},{"diffs":[[0,"sed("],[-1,"TouchPin.P0"],[1,"Button.A, function () {\n    GROUP -= 1\n    if (GROUP < EtGamepad.Group.Group1)\n        GROUP = EtGamepad.Group.Group9\n    EtGamepad.setGroup(GROUP)\n    basic.showNumber(GROUP+1)\n})\n\ninput.onButtonPressed(Button.B"],[0,", fu"]],"start1":2773,"start2":2773,"length1":19,"length2":220},{"diffs":[[0,"function"],[1," "],[0,"() {\n   "]],"start1":2991,"start2":2991,"length1":16,"length2":17},{"diffs":[[0,"er(GROUP"],[-1," + "],[1,"+"],[0,"1)\n})\n\n/"]],"start1":3147,"start2":3147,"length1":19,"length2":17}]}]},{"timestamp":1737193724648,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"SSED"],[-1,".get("],[1,"["],[0,"button"],[-1,")"],[1,"]"],[0,"\n   "]],"start1":2354,"start2":2354,"length1":20,"length2":16},{"diffs":[[0,"urn\n"],[-1,"    PRESSED.set(button, newstate)\n"],[0,"basi"]],"start1":2408,"start2":2408,"length1":42,"length2":8},{"diffs":[[0,"tton)\nreturn"],[1,"\n    PRESSED[button] = newstate"],[0,"\n    if (new"]],"start1":2431,"start2":2431,"length1":24,"length2":55},{"diffs":[[0,"t.on"],[-1,"Gesture(Gesture.LogoDown"],[1,"PinPressed(TouchPin.P0"],[0,", fu"]],"start1":2751,"start2":2751,"length1":32,"length2":30}]}]},{"timestamp":1737194298225,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"SSED"],[-1,": number[]\n\nfor (let i = 0; i < 12; i++) PRESSED.push(1)"],[1," = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]"],[0,"\n\nba"]],"start1":79,"start2":79,"length1":64,"length2":47},{"diffs":[[0,"in)\n"],[-1,"    if (pins.digitalReadPin(pin) == 0)\n        newstate = 0\n    else\n        newstate = 1\n"],[0,"    "]],"start1":2328,"start2":2328,"length1":98,"length2":8}]}]},{"timestamp":1737194852221,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ber = 0\n"],[-1,"\n"],[0,"let PRES"]],"start1":64,"start2":64,"length1":17,"length2":16},{"diffs":[[0,"SSED"],[-1,"1 = 1\nlet PRESSED2 = 1\nlet PRESSED3 = 1\nlet PRESSED4 = 1\nlet PRESSED5 = 1\nlet PRESSED6 = 1\nlet PRESSED7 = 1\nlet PRESSED8 = 1\nlet PRESSED9 = 1\nlet PRESSED10 = 1\nlet PRESSED11 = 1\nlet PRESSED12 = 1"],[1,": number[]\n\nfor (let i = 0; i < 12; i++) PRESSED.push(1)"],[0,"\n\nba"]],"start1":79,"start2":79,"length1":203,"length2":64},{"diffs":[[0,"\n}\n\n"],[-1,"function getState(button: EtGamepad.Gamepad) : boolean {\n    let state = 0\n    switch (button) {\n        case EtGamepad.Gamepad.Button1: state = PRESSED1; break;\n        case EtGamepad.Gamepad.Button2: state = PRESSED2; break;\n        case EtGamepad.Gamepad.Button3: state = PRESSED3; break;\n        case EtGamepad.Gamepad.Button4: state = PRESSED4; break;\n        case EtGamepad.Gamepad.Button5: state = PRESSED5; break;\n        case EtGamepad.Gamepad.Button6: state = PRESSED6; break;\n        case EtGamepad.Gamepad.Button7: state = PRESSED7; break;\n        case EtGamepad.Gamepad.Button8: state = PRESSED8; break;\n        case EtGamepad.Gamepad.Button9: state = PRESSED9; break;\n        case EtGamepad.Gamepad.Button10: state = PRESSED10; break;\n        case EtGamepad.Gamepad.Button11: state = PRESSED11; break;\n        case EtGamepad.Gamepad.Button12: state = PRESSED12; break;\n    }\n    return state\n}\n\nfunction setState(button: EtGamepad.Gamepad, state: boolean) {\n}\n\n"],[0,"func"]],"start1":2128,"start2":2128,"length1":983,"length2":8},{"diffs":[[0,"n);\n"],[-1,"    let oldstate = \n"],[0,"    "]],"start1":2301,"start2":2301,"length1":28,"length2":8}]}]},{"timestamp":1737195445093,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"epad) : "],[-1,"number"],[1,"boolean"],[0," {\n    l"]],"start1":2311,"start2":2311,"length1":22,"length2":23},{"diffs":[[0,"te: "],[-1,"number) {\n    switch (button) {\n        case EtGamepad.Gamepad.Button1: PRESSED1 = state; break;\n        case EtGamepad.Gamepad.Button2: PRESSED2 = state; break;\n        case EtGamepad.Gamepad.Button3: PRESSED3 = state; break;\n        case EtGamepad.Gamepad.Button4: PRESSED4 = state; break;\n        case EtGamepad.Gamepad.Button5: PRESSED5 = state; break;\n        case EtGamepad.Gamepad.Button6: PRESSED6 = state; break;\n        case EtGamepad.Gamepad.Button7: PRESSED7 = state; break;\n        case EtGamepad.Gamepad.Button8: PRESSED8 = state; break;\n        case EtGamepad.Gamepad.Button9: PRESSED9 = state; break;\n        case EtGamepad.Gamepad.Button10: PRESSED10 = state; break;\n        case EtGamepad.Gamepad.Button11: PRESSED11 = state; break;\n        case EtGamepad.Gamepad.Button12: PRESSED12 = state; break;\n    }"],[1,"boolean) {"],[0,"\n}\n\n"]],"start1":3229,"start2":3229,"length1":831,"length2":18},{"diffs":[[0,"ton)"],[-1,"\nif (!pins.digitalReadPin(pin))\nbasic.showNumber(pin)\n    let oldstate = getState(button)"],[1,";\n    let oldstate = \n    let newstate = pins.digitalReadPin(pin)\n    if (pins.digitalReadPin(pin) == 0)\n        newstate = 0\n    else\n        newstate = 1"],[0,"\n   "]],"start1":3414,"start2":3414,"length1":97,"length2":163},{"diffs":[[0,"let "],[-1,"new"],[1,"old"],[0,"state = "],[-1,"pins.digitalReadPin(pi"],[1,"PRESSED.get(butto"],[0,"n)\n "]],"start1":3578,"start2":3578,"length1":41,"length2":36},{"diffs":[[0,"urn\n    "],[-1,"setState"],[1,"PRESSED.set"],[0,"(button,"]],"start1":3654,"start2":3654,"length1":24,"length2":27},{"diffs":[[0,"wstate)\n"],[1,"basic.showNumber(button)\n"],[0,"return\n "]],"start1":3684,"start2":3684,"length1":16,"length2":41}]}]},{"timestamp":1737195928768,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"if ("],[-1,"(pin == 100) && ("],[1,"!"],[0,"pins"]],"start1":4231,"start2":4231,"length1":25,"length2":9},{"diffs":[[0,"pin)"],[-1," == 0)"],[0,")\nba"]],"start1":4256,"start2":4256,"length1":14,"length2":8}]}]},{"timestamp":1737196507486,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," = 0"],[-1,"\nlet PRESSED = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]"],[0,"\n\nle"]],"start1":67,"start2":67,"length1":59,"length2":8},{"diffs":[[0,"button)\n"],[1,"if ((pin == 100) && (pins.digitalReadPin(pin) == 0))\nbasic.showNumber(pin)\n"],[0,"    let "]],"start1":4223,"start2":4223,"length1":16,"length2":91},{"diffs":[[0,"state = "],[-1,"PRESSED["],[1,"getState("],[0,"button"],[-1,"]"],[1,")"],[0,"\n    let"]],"start1":4317,"start2":4317,"length1":31,"length2":32},{"diffs":[[0,"    "],[-1,"PRESSED[button] = newstate\nbasic.showNumber("],[1,"setState(button, "],[0,"news"]],"start1":4431,"start2":4431,"length1":52,"length2":25},{"diffs":[[0,": number) {\n"],[1,""],[0,"    DELAY = "]],"start1":5093,"start2":5093,"length1":24,"length2":24},{"diffs":[[0,"y\n}\n"],[-1,"\n// inverted logic because of PullUp\n//% block=\"not button $button is pressed\"\n//% block.loc.nl=\"knop %button niet is ingedrukt\"\nfunction isButtonReleased(button: Gamepad): boolean {\n    let pin2 = buttonPin(button);\n    if (pins.digitalReadPin(pin2) == 0)\n        return false;\n    if (PINRELEASED == pin2 && TIME > input.runningTime())\n        return false;\n    TIME = input.runningTime() + DELAY\n    PINRELEASED = pin2\n    return true;\n}\n\n// inverted logic because of PullUp\n//% block=\"button $button is pressed\"\n//% block.loc.nl=\"knop %button is ingedrukt\"\nfunction isButtonPressed(button: Gamepad): boolean {\n    let pin3 = buttonPin(button);\n    if (pins.digitalReadPin(pin3) == 1)\n        return false;\n    if (PINPRESSED == pin3 && TIME > input.runningTime())\n        return false;\n    TIME = input.runningTime() + DELAY\n    PINPRESSED = pin3\n    return true;\n}\n"]],"start1":5121,"start2":5121,"length1":874,"length2":4}]}]},{"timestamp":1737197072052,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"in)\n"],[-1,"if (pin == 113) return\nbasic.showNumber(newstate)\n"],[0,"    "]],"start1":4357,"start2":4357,"length1":58,"length2":8},{"diffs":[[0,"ewstate\n"],[1,"basic.showNumber(newstate)\n"],[0,"return\n "]],"start1":4429,"start2":4429,"length1":16,"length2":43},{"diffs":[[0,"y\n}\n"],[-1,"/*"],[0,"\n// "]],"start1":5123,"start2":5123,"length1":10,"length2":8},{"diffs":[[0,";\n}\n"],[-1,"*/"]],"start1":5993,"start2":5993,"length1":6,"length2":4}]}]},{"timestamp":1737197625582,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"namespace ETETETEET {\n\n"],[0,"let "]],"start1":0,"start2":0,"length1":27,"length2":4},{"diffs":[[0," 1, 1]\n\n"],[1,"let PRESSED1 = 1\nlet PRESSED2 = 1\nlet PRESSED3 = 1\nlet PRESSED4 = 1\nlet PRESSED5 = 1\nlet PRESSED6 = 1\nlet PRESSED7 = 1\nlet PRESSED8 = 1\nlet PRESSED9 = 1\nlet PRESSED10 = 1\nlet PRESSED11 = 1\nlet PRESSED12 = 1\n\n"],[0,"basic.sh"]],"start1":116,"start2":116,"length1":16,"length2":224},{"diffs":[[0,"pin;\n}\n\n"],[1,"function getState(button: EtGamepad.Gamepad) : number {\n    let state = 0\n    switch (button) {\n        case EtGamepad.Gamepad.Button1: state = PRESSED1; break;\n        case EtGamepad.Gamepad.Button2: state = PRESSED2; break;\n        case EtGamepad.Gamepad.Button3: state = PRESSED3; break;\n        case EtGamepad.Gamepad.Button4: state = PRESSED4; break;\n        case EtGamepad.Gamepad.Button5: state = PRESSED5; break;\n        case EtGamepad.Gamepad.Button6: state = PRESSED6; break;\n        case EtGamepad.Gamepad.Button7: state = PRESSED7; break;\n        case EtGamepad.Gamepad.Button8: state = PRESSED8; break;\n        case EtGamepad.Gamepad.Button9: state = PRESSED9; break;\n        case EtGamepad.Gamepad.Button10: state = PRESSED10; break;\n        case EtGamepad.Gamepad.Button11: state = PRESSED11; break;\n        case EtGamepad.Gamepad.Button12: state = PRESSED12; break;\n    }\n    return state\n}\n\nfunction setState(button: EtGamepad.Gamepad, state: number) {\n    switch (button) {\n        case EtGamepad.Gamepad.Button1: PRESSED1 = state; break;\n        case EtGamepad.Gamepad.Button2: PRESSED2 = state; break;\n        case EtGamepad.Gamepad.Button3: PRESSED3 = state; break;\n        case EtGamepad.Gamepad.Button4: PRESSED4 = state; break;\n        case EtGamepad.Gamepad.Button5: PRESSED5 = state; break;\n        case EtGamepad.Gamepad.Button6: PRESSED6 = state; break;\n        case EtGamepad.Gamepad.Button7: PRESSED7 = state; break;\n        case EtGamepad.Gamepad.Button8: PRESSED8 = state; break;\n        case EtGamepad.Gamepad.Button9: PRESSED9 = state; break;\n        case EtGamepad.Gamepad.Button10: PRESSED10 = state; break;\n        case EtGamepad.Gamepad.Button11: PRESSED11 = state; break;\n        case EtGamepad.Gamepad.Button12: PRESSED12 = state; break;\n    }\n}\n\n"],[0,"function"]],"start1":2315,"start2":2315,"length1":16,"length2":1803},{"diffs":[[0,"button)\n"],[1,"    let oldstate = PRESSED[button]\n"],[0,"    let "]],"start1":4274,"start2":4274,"length1":16,"length2":51},{"diffs":[[0,"in)\n"],[-1,"    let oldstate = PRESSED[button]"],[1,"if (pin == 113) return\nbasic.showNumber(newstate)"],[0,"\n   "]],"start1":4357,"start2":4357,"length1":42,"length2":57},{"diffs":[[0,"tton"],[-1,"9"],[1,"12"],[0,"; i++)\n"],[-1,"        basic.showNumber(i)\n"],[0,"    "]],"start1":4726,"start2":4726,"length1":44,"length2":17},{"diffs":[[0,"(i)\n"],[-1,"}\n"],[0,"})\n\n"],[-1,"/*\n"],[0,"inpu"]],"start1":4758,"start2":4758,"length1":17,"length2":12},{"diffs":[[0," + 1)\n})"],[-1,"\n*/"],[0,"\n\n//% bl"]],"start1":4963,"start2":4963,"length1":19,"length2":16},{"diffs":[[0,"}\n*/"],[-1,"\n\n}"]],"start1":6020,"start2":6020,"length1":7,"length2":4}]}]},{"timestamp":1737198220274,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"LAY = 50"],[1,"0"],[0,"\nlet TIM"]],"start1":64,"start2":64,"length1":16,"length2":17},{"diffs":[[0,") {\n"],[-1,"    let pin = buttonPin(button)\n    let newstate = pins.digitalReadPin(pin)\n//"],[0,"    "]],"start1":2184,"start2":2184,"length1":86,"length2":8},{"diffs":[[0,"Time())\n"],[-1,"//"],[0,"        "]],"start1":2216,"start2":2216,"length1":18,"length2":16},{"diffs":[[0," return\n"],[-1,"//"],[0,"    TIME"]],"start1":2231,"start2":2231,"length1":18,"length2":16},{"diffs":[[0,"e() + DELAY\n"],[1,"    let pin = buttonPin(button)\n    let newstate = pins.digitalReadPin(pin)\n"],[0,"    let olds"]],"start1":2266,"start2":2266,"length1":24,"length2":100},{"diffs":[[0,"ate\n"],[-1,"basic.showNumber(newstate)\n"],[0,"retu"]],"start1":2461,"start2":2461,"length1":35,"length2":8},{"diffs":[[0,"tton"],[-1,"12"],[1,"9"],[0,"; i++)\n"],[1,"        basic.showNumber(i)\n"],[0,"    "]],"start1":2704,"start2":2704,"length1":17,"length2":44},{"diffs":[[0,"tate(i)\n"],[1,"}\n"],[0,"})\n\n"],[1,"/*\n"],[0,"input.on"]],"start1":2759,"start2":2759,"length1":20,"length2":25},{"diffs":[[0," + 1)\n})"],[1,"\n*/"],[0,"\n\n//% bl"]],"start1":2973,"start2":2973,"length1":16,"length2":19}]}]},{"timestamp":1737198737015,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"namespace ETETETEET {\n\n"],[0,"let GROUP = "]],"start1":0,"start2":0,"length1":12,"length2":35},{"diffs":[[0,"e = "],[-1,"0\n    switch (button) {\n        case EtGamepad.Gamepad.Button1: newstate = DigitalPin.P13; break;\n        case EtGamepad.Gamepad.Button2: pin = DigitalPin.P15; break;\n        case EtGamepad.Gamepad.Button3: pin = DigitalPin.P1; break;\n        case EtGamepad.Gamepad.Button4: pin = DigitalPin.P12; break;\n        case EtGamepad.Gamepad.Button5: pin = DigitalPin.P16; break;\n        case EtGamepad.Gamepad.Button6: pin = DigitalPin.P2; break;\n        case EtGamepad.Gamepad.Button7: pin = DigitalPin.P8; break;\n        case EtGamepad.Gamepad.Button8: pin = DigitalPin.P14; break;"],[1,"pins.digitalReadPin(pin)\n//    if (TIME > input.runningTime())\n//        return\n//    TIME = input.runningTime() + DELAY\n    let oldstate = PRESSED[button]\n    if (oldstate == newstate)\n        return\n    PRESSED[button] = newstate\nbasic.showNumber(newstate)\nreturn\n    if (newstate)\n        radio.sendNumber(EtGamepad.Gamepad.Button12 + button) // released\n    radio.sendNumber(button) // pressed\n}\n\nbasic.forever(function () {\n    for (let i = EtGamepad.Gamepad.Button1; i <= EtGamepad.Gamepad.Button12; i++)\n        buttonState(i)\n})\n\ninput.onGesture(Gesture.LogoDown, function() {\n    GROUP += 1\n    if (GROUP > EtGamepad.Group.Group9)"],[0,"\n   "]],"start1":2234,"start2":2234,"length1":585,"length2":647},{"diffs":[[0,"Group9)\n        "],[-1,"case"],[1,"GROUP ="],[0," EtGamepad.Gamep"]],"start1":2870,"start2":2870,"length1":36,"length2":39},{"diffs":[[0,"ad.G"],[-1,"amepad.Button9: pin = DigitalPin.P9; break;\n        case EtGamepad.Gamepad.Button10: pin = DigitalPin.P0; break;\n        case EtGamepad.Gamepad.Button11: pin = DigitalPin.P5; break;\n        case EtGamepad.Gamepad.Button12: pin = DigitalPin.P11; break;\n    }\n    let newstate = "],[1,"roup.Group1\n    EtGamepad.setGroup(GROUP)\n    basic.showNumber(GROUP + 1)\n})\n\n//% block=\"set repeating time to $delay msec\"\n//% block.loc.nl=\"stel herhaaltijd in op $delay msec\"\n//% delay.defl=500\nfunction buttonDelay(delay: number) {\n    DELAY = delay\n}\n/*\n// inverted logic because of PullUp\n//% block=\"not button $button is pressed\"\n//% block.loc.nl=\"knop %button niet is ingedrukt\"\nfunction isButtonReleased(button: Gamepad): boolean {\n    let pin2 = buttonPin(button);\n    if ("],[0,"pins"]],"start1":2901,"start2":2901,"length1":285,"length2":490},{"diffs":[[0,"(pin"],[1,"2) == 0"],[0,")\n    "],[1," "],[-1,"let oldstate = PRESSED[button]\n    if (oldstate == newstate)\n        return\n    if (newstate)\n        button += EtGamepad.Gamepad.Button12\nbasic.showNumber(button)\n//    radio.sendNumber(button)\n}\n\nbasic.forever(function () {\n    for (let i = EtGamepad.Gamepad.Button1; i <= EtGamepad.Gamepad.Button12; i++)\n        buttonState(i)\n})\n\ninput.onGesture(Gesture.LogoDown, function() {\n    GROUP += 1\n    if (GROUP > EtGamepad.Group.Group9)\n        GROUP = EtGamepad.Group.Group1\n    EtGamepad.setGroup(GROUP)\n    basic.showNumber(GROUP + 1)\n})\n"],[1,"   return false;\n    if (PINRELEASED == pin2 && TIME > input.runningTime())\n        return false;\n    TIME = input.runningTime() + DELAY\n    PINRELEASED = pin2\n    return true;\n}\n\n// inverted logic because of PullUp\n//% block=\"button $button is pressed\"\n//% block.loc.nl=\"knop %button is ingedrukt\"\nfunction isButtonPressed(button: Gamepad): boolean {\n    let pin3 = buttonPin(button);\n    if (pins.digitalReadPin(pin3) == 1)\n        return false;\n    if (PINPRESSED == pin3 && TIME > input.runningTime())\n        return false;\n    TIME = input.runningTime() + DELAY\n    PINPRESSED = pin3\n    return true;\n}\n*/\n\n}"]],"start1":3406,"start2":3406,"length1":551,"length2":631}]}]},{"timestamp":1737199323716,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"EtGamepad_setGroup\"><field name=\"group\">EtGamepad.Group.Group1</field><next><block type=\"basic_show_icon\"><field name=\"i\">IconNames.Heart</field></block></next></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-4\" y=\"201\"><field name=\"button\">EtGamepad.Button.Button1</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.North</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-4\" y=\"345\"><field name=\"button\">EtGamepad.Button.Button2</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.South</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-2\" y=\"492\"><field name=\"button\">EtGamepad.Button.Button12</field><statement name=\"HANDLER\"><block type=\"basic_show_icon\"><field name=\"i\">IconNames.No</field></block></statement></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":1104}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"n button"],[-1,"State"],[1,"Pin"],[0,"(button:"]],"start1":1176,"start2":1176,"length1":21,"length2":19},{"diffs":[[0,"Gamepad)"],[1,": number"],[0," {\n    l"]],"start1":1206,"start2":1206,"length1":16,"length2":24},{"diffs":[[0,"let "],[-1,"newstate: number"],[1,"pin = 0;"],[0,"\n   "]],"start1":1229,"start2":1229,"length1":24,"length2":16},{"diffs":[[0,"on1:"],[-1,"\n            newstate = pins.digitalReadPin(DigitalPin.P13)\n           "],[1," pin = DigitalPin.P13; break;\n        case EtGamepad.Gamepad.Button2: pin = DigitalPin.P15; break;\n        case EtGamepad.Gamepad.Button3: pin = DigitalPin.P1;"],[0," break"],[1,";"],[0,"\n   "]],"start1":1299,"start2":1299,"length1":85,"length2":174},{"diffs":[[0,"tton"],[-1,"2:\n            newstate = pins.digitalReadPin(DigitalPin.P15)\n           "],[1,"4: pin = DigitalPin.P12; break;\n        case EtGamepad.Gamepad.Button5: pin = DigitalPin.P16; break;\n        case EtGamepad.Gamepad.Button6: pin = DigitalPin.P2;"],[0," break"],[1,";"],[0,"\n   "]],"start1":1503,"start2":1503,"length1":87,"length2":176},{"diffs":[[0,"tton"],[-1,"3:\n            newstate = pins.digitalReadPin(DigitalPin.P1)\n           "],[1,"7: pin = DigitalPin.P8; break;\n        case EtGamepad.Gamepad.Button8: pin = DigitalPin.P14; break;\n        case EtGamepad.Gamepad.Button9: pin = DigitalPin.P9;"],[0," break"],[1,";"],[0,"\n   "]],"start1":1709,"start2":1709,"length1":86,"length2":175},{"diffs":[[0,"tton"],[-1,"4:\n            newstate = pins.digitalReadPin(DigitalPin.P12)\n           "],[1,"10: pin = DigitalPin.P0; break;\n        case EtGamepad.Gamepad.Button11: pin = DigitalPin.P5;"],[0," break"],[1,";"],[0,"\n   "]],"start1":1914,"start2":1914,"length1":87,"length2":108},{"diffs":[[0,"tton"],[-1,"5:\n    "],[1,"12: pin = DigitalPin.P11; break;\n"],[0,"    "],[1,"}\n"],[0,"    "],[-1,"newstate = pins.digitalReadPin(DigitalPin.P16)\n            break\n        case EtGamepad.Gamepad.Button6:\n            newstate = pins.digitalReadPin(DigitalPin.P2)\n           "],[1,"return pin;\n}\n\nfunction buttonState(button: EtGamepad.Gamepad) {\n    let pin = buttonPin(button)\n    let newstate = 0\n    switch (button) {\n        case EtGamepad.Gamepad.Button1: newstate = DigitalPin.P13;"],[0," break"],[1,";"],[0,"\n   "]],"start1":2052,"start2":2052,"length1":203,"length2":264},{"diffs":[[0,"tton"],[-1,"7:\n            newstate = pins.digitalReadPin(DigitalPin.P8)\n           "],[1,"2: pin = DigitalPin.P15; break;\n        case EtGamepad.Gamepad.Button3: pin = DigitalPin.P1;"],[0," break"],[1,";"],[0,"\n   "]],"start1":2346,"start2":2346,"length1":86,"length2":107},{"diffs":[[0,"tton"],[-1,"8:\n            newstate = pins.digitalReadPin(DigitalPin.P14)\n           "],[1,"4: pin = DigitalPin.P12; break;\n        case EtGamepad.Gamepad.Button5: pin = DigitalPin.P16;"],[0," break"],[1,";"],[0,"\n   "]],"start1":2483,"start2":2483,"length1":87,"length2":108},{"diffs":[[0,"tton"],[-1,"9:\n            newstate = pins.digitalReadPin(DigitalPin.P9)\n           "],[1,"6: pin = DigitalPin.P2; break;\n        case EtGamepad.Gamepad.Button7: pin = DigitalPin.P8;"],[0," break"],[1,";"],[0,"\n   "]],"start1":2621,"start2":2621,"length1":86,"length2":106},{"diffs":[[0,"tton"],[-1,"10:\n            newstate = pins.digitalReadPin(DigitalPin.P0)\n           "],[1,"8: pin = DigitalPin.P14; break;\n        case EtGamepad.Gamepad.Button9: pin = DigitalPin.P9;"],[0," break"],[1,";"],[0,"\n   "]],"start1":2757,"start2":2757,"length1":87,"length2":107},{"diffs":[[0,"ton1"],[-1,"1:\n            newstate = pins.digitalReadPin(DigitalPin.P5)\n           "],[1,"0: pin = DigitalPin.P0; break;\n        case EtGamepad.Gamepad.Button11: pin = DigitalPin.P5;"],[0," break"],[1,";"],[0,"\n   "]],"start1":2895,"start2":2895,"length1":86,"length2":107},{"diffs":[[0,"utton12:"],[-1,"\n       "],[1," pin = DigitalPin.P11; break;\n    }\n"],[0,"    "],[1,"let"],[0," newstat"]],"start1":3031,"start2":3031,"length1":28,"length2":59},{"diffs":[[0,"Pin("],[-1,"DigitalPin.P11)\n            break\n    }\n    if (PRESSED[button] == newstate)\n        return\n    PRESSED[button] = newstate"],[1,"pin)\n    let oldstate = PRESSED[button]\n    if (oldstate == newstate)\n        return"],[0,"\n   "]],"start1":3110,"start2":3110,"length1":130,"length2":92},{"diffs":[[0,"utton12\n"],[1,"basic.showNumber(button)\n//"],[0,"    radi"]],"start1":3254,"start2":3254,"length1":16,"length2":43}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":333,"start2":333,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests gaan hier; deze zal niet worden gecompileerd wanneer dit pakket wordt gebruikt als extensie.\n"}]}],"snapshots":[{"timestamp":1736688798246,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"ElecTricks Gamepad\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1736696312642,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"EtGamepad_setGroup\"><field name=\"group\">EtGamepad.Group.Group1</field><next><block type=\"basic_show_icon\"><field name=\"i\">IconNames.Heart</field></block></next></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"9\" y=\"208\"><field name=\"button\">EtGamepad.Button.Button11</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.North</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-8\" y=\"349\"><field name=\"button\">EtGamepad.Button.Button2</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.North</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-2\" y=\"492\"><field name=\"button\">EtGamepad.Button.Button12</field><statement name=\"HANDLER\"><block type=\"basic_show_icon\"><field name=\"i\">IconNames.No</field></block></statement></block></xml>","main.ts":"EtGamepad.onButtonPressed(EtGamepad.Button.Button12, function () {\n    basic.showIcon(IconNames.No)\n})\nEtGamepad.onButtonPressed(EtGamepad.Button.Button11, function () {\n    basic.showArrow(ArrowNames.North)\n})\nEtGamepad.onButtonPressed(EtGamepad.Button.Button2, function () {\n    basic.showArrow(ArrowNames.North)\n})\nEtGamepad.setGroup(EtGamepad.Group.Group1)\nbasic.showIcon(IconNames.Heart)\n","README.md":"","pxt.json":"{\n    \"name\": \"ElecTricks Gamepad\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-gamepad\": \"github:etmodules/pxt-gamepad#499032d4e62a44a12cab76c45f671168a9be9208\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1737190469583,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"EtGamepad_setGroup\"><field name=\"group\">EtGamepad.Group.Group1</field><next><block type=\"basic_show_icon\"><field name=\"i\">IconNames.Heart</field></block></next></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-4\" y=\"201\"><field name=\"button\">EtGamepad.Button.Button1</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.North</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-4\" y=\"345\"><field name=\"button\">EtGamepad.Button.Button2</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.South</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-2\" y=\"492\"><field name=\"button\">EtGamepad.Button.Button12</field><statement name=\"HANDLER\"><block type=\"basic_show_icon\"><field name=\"i\">IconNames.No</field></block></statement></block></xml>","main.ts":"","README.md":"","pxt.json":"{\n    \"name\": \"ElecTricks Gamepad\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-gamepad\": \"github:etmodules/pxt-gamepad#7653aa3977a41734b67ae0b55aa561f67cc91dc4\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n"}},{"timestamp":1737192272902,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"EtGamepad_setGroup\"><field name=\"group\">EtGamepad.Group.Group1</field><next><block type=\"basic_show_icon\"><field name=\"i\">IconNames.Heart</field></block></next></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-4\" y=\"201\"><field name=\"button\">EtGamepad.Button.Button1</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.North</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-4\" y=\"345\"><field name=\"button\">EtGamepad.Button.Button2</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.South</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-2\" y=\"492\"><field name=\"button\">EtGamepad.Button.Button12</field><statement name=\"HANDLER\"><block type=\"basic_show_icon\"><field name=\"i\">IconNames.No</field></block></statement></block></xml>","main.ts":"pins.digitalWritePin(DigitalPin.P0, 1)\npins.digitalWritePin(DigitalPin.P1, 1)\npins.digitalWritePin(DigitalPin.P2, 1)\npins.digitalWritePin(DigitalPin.P8, 1)\npins.digitalWritePin(DigitalPin.P9, 1)\npins.digitalWritePin(DigitalPin.P11, 1)\npins.digitalWritePin(DigitalPin.P12, 1)\npins.digitalWritePin(DigitalPin.P13, 1)\npins.digitalWritePin(DigitalPin.P14, 1)\npins.digitalWritePin(DigitalPin.P15, 1)\npins.digitalWritePin(DigitalPin.P16, 1)\n\npins.setPull(DigitalPin.P0, PinPullMode.PullUp)\npins.setPull(DigitalPin.P1, PinPullMode.PullUp)\npins.setPull(DigitalPin.P2, PinPullMode.PullUp)\npins.setPull(DigitalPin.P5, PinPullMode.PullUp)\npins.setPull(DigitalPin.P8, PinPullMode.PullUp)\npins.setPull(DigitalPin.P9, PinPullMode.PullUp)\npins.setPull(DigitalPin.P11, PinPullMode.PullUp)\npins.setPull(DigitalPin.P12, PinPullMode.PullUp)\npins.setPull(DigitalPin.P13, PinPullMode.PullUp)\npins.setPull(DigitalPin.P14, PinPullMode.PullUp)\npins.setPull(DigitalPin.P15, PinPullMode.PullUp)\npins.setPull(DigitalPin.P16, PinPullMode.PullUp)\n\nlet DELAY = 500\nlet TIME: number = 0\n\nlet PRESSED = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n\nfunction buttonPin(button: EtGamepad.Gamepad): number {\n    let pin = 0;\n    switch (button) {\n        case EtGamepad.Gamepad.Button1: pin = DigitalPin.P13; break;\n        case EtGamepad.Gamepad.Button2: pin = DigitalPin.P15; break;\n        case EtGamepad.Gamepad.Button3: pin = DigitalPin.P1; break;\n        case EtGamepad.Gamepad.Button4: pin = DigitalPin.P12; break;\n        case EtGamepad.Gamepad.Button5: pin = DigitalPin.P16; break;\n        case EtGamepad.Gamepad.Button6: pin = DigitalPin.P2; break;\n        case EtGamepad.Gamepad.Button7: pin = DigitalPin.P8; break;\n        case EtGamepad.Gamepad.Button8: pin = DigitalPin.P14; break;\n        case EtGamepad.Gamepad.Button9: pin = DigitalPin.P9; break;\n        case EtGamepad.Gamepad.Button10: pin = DigitalPin.P0; break;\n        case EtGamepad.Gamepad.Button11: pin = DigitalPin.P5; break;\n        case EtGamepad.Gamepad.Button12: pin = DigitalPin.P11; break;\n    }\n    return pin;\n}\n\nfunction checkButtonPressed(button: EtGamepad.Gamepad) {\n    if (TIME > input.runningTime())\n        return\n    TIME = input.runningTime() + DELAY\n    let pin = buttonPin(button);\n    let newstate = pins.digitalReadPin(pin)\n    let oldstate = PRESSED[button]\n    if (oldstate == newstate)\n        return\n    PRESSED[button] = newstate\n    if (newstate)\n        radio.sendNumber(button) // pressed\n    radio.sendNumber(EtGamepad.Gamepad.Button12 + button)\n}\n\nbasic.forever(function () {\n    for (let i = EtGamepad.Gamepad.Button1; i <= EtGamepad.Gamepad.Button12; i++)\n        checkButtonPressed(i)\n})\n\n//% block=\"set repeating time to $delay msec\"\n//% block.loc.nl=\"stel herhaaltijd in op $delay msec\"\n//% delay.defl=500\nfunction buttonDelay(delay: number) {\n    DELAY = delay\n}\n","README.md":"","pxt.json":"{\n    \"name\": \"ElecTricks Gamepad\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-gamepad\": \"github:etmodules/pxt-gamepad#82c93accc17664eb6f42e05986ce19f016752518\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1737194093685,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"EtGamepad_setGroup\"><field name=\"group\">EtGamepad.Group.Group1</field><next><block type=\"basic_show_icon\"><field name=\"i\">IconNames.Heart</field></block></next></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-4\" y=\"201\"><field name=\"button\">EtGamepad.Button.Button1</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.North</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-4\" y=\"345\"><field name=\"button\">EtGamepad.Button.Button2</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.South</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-2\" y=\"492\"><field name=\"button\">EtGamepad.Button.Button12</field><statement name=\"HANDLER\"><block type=\"basic_show_icon\"><field name=\"i\">IconNames.No</field></block></statement></block></xml>","main.ts":"let GROUP = EtGamepad.Group.Group1\nlet DELAY = 500\nlet TIME: number = 0\nlet PRESSED = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n\nbasic.showNumber(GROUP+1)\n\npins.digitalWritePin(DigitalPin.P0, 1)\npins.digitalWritePin(DigitalPin.P1, 1)\npins.digitalWritePin(DigitalPin.P2, 1)\npins.digitalWritePin(DigitalPin.P8, 1)\npins.digitalWritePin(DigitalPin.P9, 1)\npins.digitalWritePin(DigitalPin.P11, 1)\npins.digitalWritePin(DigitalPin.P12, 1)\npins.digitalWritePin(DigitalPin.P13, 1)\npins.digitalWritePin(DigitalPin.P14, 1)\npins.digitalWritePin(DigitalPin.P15, 1)\npins.digitalWritePin(DigitalPin.P16, 1)\n\npins.setPull(DigitalPin.P0, PinPullMode.PullUp)\npins.setPull(DigitalPin.P1, PinPullMode.PullUp)\npins.setPull(DigitalPin.P2, PinPullMode.PullUp)\npins.setPull(DigitalPin.P5, PinPullMode.PullUp)\npins.setPull(DigitalPin.P8, PinPullMode.PullUp)\npins.setPull(DigitalPin.P9, PinPullMode.PullUp)\npins.setPull(DigitalPin.P11, PinPullMode.PullUp)\npins.setPull(DigitalPin.P12, PinPullMode.PullUp)\npins.setPull(DigitalPin.P13, PinPullMode.PullUp)\npins.setPull(DigitalPin.P14, PinPullMode.PullUp)\npins.setPull(DigitalPin.P15, PinPullMode.PullUp)\npins.setPull(DigitalPin.P16, PinPullMode.PullUp)\n\nfunction buttonPin(button: EtGamepad.Gamepad): number {\n    let pin = 0;\n    switch (button) {\n        case EtGamepad.Gamepad.Button1: pin = DigitalPin.P13; break;\n        case EtGamepad.Gamepad.Button2: pin = DigitalPin.P15; break;\n        case EtGamepad.Gamepad.Button3: pin = DigitalPin.P1; break;\n        case EtGamepad.Gamepad.Button4: pin = DigitalPin.P12; break;\n        case EtGamepad.Gamepad.Button5: pin = DigitalPin.P16; break;\n        case EtGamepad.Gamepad.Button6: pin = DigitalPin.P2; break;\n        case EtGamepad.Gamepad.Button7: pin = DigitalPin.P8; break;\n        case EtGamepad.Gamepad.Button8: pin = DigitalPin.P14; break;\n        case EtGamepad.Gamepad.Button9: pin = DigitalPin.P9; break;\n        case EtGamepad.Gamepad.Button10: pin = DigitalPin.P0; break;\n        case EtGamepad.Gamepad.Button11: pin = DigitalPin.P5; break;\n        case EtGamepad.Gamepad.Button12: pin = DigitalPin.P11; break;\n    }\n    return pin;\n}\n\nfunction buttonState(button: EtGamepad.Gamepad) {\n    if (TIME > input.runningTime())\n        return\n    TIME = input.runningTime() + DELAY\n    let pin = buttonPin(button);\n    let newstate = pins.digitalReadPin(pin)\n    let oldstate = PRESSED[button]\n    if (oldstate == newstate)\n        return\nbasic.showNumber(button)\nreturn\n    PRESSED[button] = newstate\n    if (newstate)\n        radio.sendNumber(EtGamepad.Gamepad.Button12 + button) // released\n    radio.sendNumber(button) // pressed\n}\n\nbasic.forever(function () {\n    for (let i = EtGamepad.Gamepad.Button1; i <= EtGamepad.Gamepad.Button12; i++)\n        buttonState(i)\n})\n\ninput.onGesture(Gesture.LogoDown, function() {\n    GROUP += 1\n    if (GROUP > EtGamepad.Group.Group9)\n        GROUP = EtGamepad.Group.Group1\n    EtGamepad.setGroup(GROUP)\n    basic.showNumber(GROUP + 1)\n})\n\n//% block=\"set repeating time to $delay msec\"\n//% block.loc.nl=\"stel herhaaltijd in op $delay msec\"\n//% delay.defl=500\nfunction buttonDelay(delay: number) {\n    DELAY = delay\n}\n","README.md":"","pxt.json":"{\n    \"name\": \"ElecTricks Gamepad\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-gamepad\": \"github:etmodules/pxt-gamepad#82c93accc17664eb6f42e05986ce19f016752518\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1737195897485,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"EtGamepad_setGroup\"><field name=\"group\">EtGamepad.Group.Group1</field><next><block type=\"basic_show_icon\"><field name=\"i\">IconNames.Heart</field></block></next></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-4\" y=\"201\"><field name=\"button\">EtGamepad.Button.Button1</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.North</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-4\" y=\"345\"><field name=\"button\">EtGamepad.Button.Button2</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.South</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-2\" y=\"492\"><field name=\"button\">EtGamepad.Button.Button12</field><statement name=\"HANDLER\"><block type=\"basic_show_icon\"><field name=\"i\">IconNames.No</field></block></statement></block></xml>","main.ts":"let GROUP = EtGamepad.Group.Group1\nlet DELAY = 500\nlet TIME: number = 0\n\nlet PRESSED1 = 1\nlet PRESSED2 = 1\nlet PRESSED3 = 1\nlet PRESSED4 = 1\nlet PRESSED5 = 1\nlet PRESSED6 = 1\nlet PRESSED7 = 1\nlet PRESSED8 = 1\nlet PRESSED9 = 1\nlet PRESSED10 = 1\nlet PRESSED11 = 1\nlet PRESSED12 = 1\n\nbasic.showNumber(GROUP+1)\n\npins.digitalWritePin(DigitalPin.P0, 1)\npins.digitalWritePin(DigitalPin.P1, 1)\npins.digitalWritePin(DigitalPin.P2, 1)\npins.digitalWritePin(DigitalPin.P8, 1)\npins.digitalWritePin(DigitalPin.P9, 1)\npins.digitalWritePin(DigitalPin.P11, 1)\npins.digitalWritePin(DigitalPin.P12, 1)\npins.digitalWritePin(DigitalPin.P13, 1)\npins.digitalWritePin(DigitalPin.P14, 1)\npins.digitalWritePin(DigitalPin.P15, 1)\npins.digitalWritePin(DigitalPin.P16, 1)\n\npins.setPull(DigitalPin.P0, PinPullMode.PullUp)\npins.setPull(DigitalPin.P1, PinPullMode.PullUp)\npins.setPull(DigitalPin.P2, PinPullMode.PullUp)\npins.setPull(DigitalPin.P5, PinPullMode.PullUp)\npins.setPull(DigitalPin.P8, PinPullMode.PullUp)\npins.setPull(DigitalPin.P9, PinPullMode.PullUp)\npins.setPull(DigitalPin.P11, PinPullMode.PullUp)\npins.setPull(DigitalPin.P12, PinPullMode.PullUp)\npins.setPull(DigitalPin.P13, PinPullMode.PullUp)\npins.setPull(DigitalPin.P14, PinPullMode.PullUp)\npins.setPull(DigitalPin.P15, PinPullMode.PullUp)\npins.setPull(DigitalPin.P16, PinPullMode.PullUp)\n\nfunction buttonPin(button: EtGamepad.Gamepad): number {\n    let pin = 0;\n    switch (button) {\n        case EtGamepad.Gamepad.Button1: pin = DigitalPin.P13; break;\n        case EtGamepad.Gamepad.Button2: pin = DigitalPin.P15; break;\n        case EtGamepad.Gamepad.Button3: pin = DigitalPin.P1; break;\n        case EtGamepad.Gamepad.Button4: pin = DigitalPin.P12; break;\n        case EtGamepad.Gamepad.Button5: pin = DigitalPin.P16; break;\n        case EtGamepad.Gamepad.Button6: pin = DigitalPin.P2; break;\n        case EtGamepad.Gamepad.Button7: pin = DigitalPin.P8; break;\n        case EtGamepad.Gamepad.Button8: pin = DigitalPin.P14; break;\n        case EtGamepad.Gamepad.Button9: pin = DigitalPin.P9; break;\n        case EtGamepad.Gamepad.Button10: pin = DigitalPin.P0; break;\n        case EtGamepad.Gamepad.Button11: pin = DigitalPin.P5; break;\n        case EtGamepad.Gamepad.Button12: pin = DigitalPin.P11; break;\n    }\n    return pin;\n}\n\nfunction getState(button: EtGamepad.Gamepad) : number {\n    let state = 0\n    switch (button) {\n        case EtGamepad.Gamepad.Button1: state = PRESSED1; break;\n        case EtGamepad.Gamepad.Button2: state = PRESSED2; break;\n        case EtGamepad.Gamepad.Button3: state = PRESSED3; break;\n        case EtGamepad.Gamepad.Button4: state = PRESSED4; break;\n        case EtGamepad.Gamepad.Button5: state = PRESSED5; break;\n        case EtGamepad.Gamepad.Button6: state = PRESSED6; break;\n        case EtGamepad.Gamepad.Button7: state = PRESSED7; break;\n        case EtGamepad.Gamepad.Button8: state = PRESSED8; break;\n        case EtGamepad.Gamepad.Button9: state = PRESSED9; break;\n        case EtGamepad.Gamepad.Button10: state = PRESSED10; break;\n        case EtGamepad.Gamepad.Button11: state = PRESSED11; break;\n        case EtGamepad.Gamepad.Button12: state = PRESSED12; break;\n    }\n    return state\n}\n\nfunction setState(button: EtGamepad.Gamepad, state: number) {\n    switch (button) {\n        case EtGamepad.Gamepad.Button1: PRESSED1 = state; break;\n        case EtGamepad.Gamepad.Button2: PRESSED2 = state; break;\n        case EtGamepad.Gamepad.Button3: PRESSED3 = state; break;\n        case EtGamepad.Gamepad.Button4: PRESSED4 = state; break;\n        case EtGamepad.Gamepad.Button5: PRESSED5 = state; break;\n        case EtGamepad.Gamepad.Button6: PRESSED6 = state; break;\n        case EtGamepad.Gamepad.Button7: PRESSED7 = state; break;\n        case EtGamepad.Gamepad.Button8: PRESSED8 = state; break;\n        case EtGamepad.Gamepad.Button9: PRESSED9 = state; break;\n        case EtGamepad.Gamepad.Button10: PRESSED10 = state; break;\n        case EtGamepad.Gamepad.Button11: PRESSED11 = state; break;\n        case EtGamepad.Gamepad.Button12: PRESSED12 = state; break;\n    }\n}\n\nfunction buttonState(button: EtGamepad.Gamepad) {\n    if (TIME > input.runningTime())\n        return\n    TIME = input.runningTime() + DELAY\n    let pin = buttonPin(button)\n\nbasic.showNumber(pin)\n    let oldstate = getState(button)\n    let newstate = pins.digitalReadPin(pin)\n    if (oldstate == newstate)\n        return\n    setState(button, newstate)\nreturn\n    if (newstate)\n        radio.sendNumber(EtGamepad.Gamepad.Button12 + button) // released\n    radio.sendNumber(button) // pressed\n}\n\nbasic.forever(function () {\n    for (let i = EtGamepad.Gamepad.Button1; i <= EtGamepad.Gamepad.Button12; i++)\n        buttonState(i)\n})\n\ninput.onGesture(Gesture.LogoDown, function() {\n    GROUP += 1\n    if (GROUP > EtGamepad.Group.Group9)\n        GROUP = EtGamepad.Group.Group1\n    EtGamepad.setGroup(GROUP)\n    basic.showNumber(GROUP + 1)\n})\n\n//% block=\"set repeating time to $delay msec\"\n//% block.loc.nl=\"stel herhaaltijd in op $delay msec\"\n//% delay.defl=500\nfunction buttonDelay(delay: number) {\n    DELAY = delay\n}\n","README.md":"","pxt.json":"{\n    \"name\": \"ElecTricks Gamepad\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-gamepad\": \"github:etmodules/pxt-gamepad#82c93accc17664eb6f42e05986ce19f016752518\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1737197729607,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"EtGamepad_setGroup\"><field name=\"group\">EtGamepad.Group.Group1</field><next><block type=\"basic_show_icon\"><field name=\"i\">IconNames.Heart</field></block></next></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-4\" y=\"201\"><field name=\"button\">EtGamepad.Button.Button1</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.North</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-4\" y=\"345\"><field name=\"button\">EtGamepad.Button.Button2</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.South</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-2\" y=\"492\"><field name=\"button\">EtGamepad.Button.Button12</field><statement name=\"HANDLER\"><block type=\"basic_show_icon\"><field name=\"i\">IconNames.No</field></block></statement></block></xml>","main.ts":"let GROUP = EtGamepad.Group.Group1\nlet DELAY = 500\nlet TIME: number = 0\nlet PRESSED = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n\nlet PRESSED1 = 1\nlet PRESSED2 = 1\nlet PRESSED3 = 1\nlet PRESSED4 = 1\nlet PRESSED5 = 1\nlet PRESSED6 = 1\nlet PRESSED7 = 1\nlet PRESSED8 = 1\nlet PRESSED9 = 1\nlet PRESSED10 = 1\nlet PRESSED11 = 1\nlet PRESSED12 = 1\n\nbasic.showNumber(GROUP+1)\n\npins.digitalWritePin(DigitalPin.P0, 1)\npins.digitalWritePin(DigitalPin.P1, 1)\npins.digitalWritePin(DigitalPin.P2, 1)\npins.digitalWritePin(DigitalPin.P8, 1)\npins.digitalWritePin(DigitalPin.P9, 1)\npins.digitalWritePin(DigitalPin.P11, 1)\npins.digitalWritePin(DigitalPin.P12, 1)\npins.digitalWritePin(DigitalPin.P13, 1)\npins.digitalWritePin(DigitalPin.P14, 1)\npins.digitalWritePin(DigitalPin.P15, 1)\npins.digitalWritePin(DigitalPin.P16, 1)\n\npins.setPull(DigitalPin.P0, PinPullMode.PullUp)\npins.setPull(DigitalPin.P1, PinPullMode.PullUp)\npins.setPull(DigitalPin.P2, PinPullMode.PullUp)\npins.setPull(DigitalPin.P5, PinPullMode.PullUp)\npins.setPull(DigitalPin.P8, PinPullMode.PullUp)\npins.setPull(DigitalPin.P9, PinPullMode.PullUp)\npins.setPull(DigitalPin.P11, PinPullMode.PullUp)\npins.setPull(DigitalPin.P12, PinPullMode.PullUp)\npins.setPull(DigitalPin.P13, PinPullMode.PullUp)\npins.setPull(DigitalPin.P14, PinPullMode.PullUp)\npins.setPull(DigitalPin.P15, PinPullMode.PullUp)\npins.setPull(DigitalPin.P16, PinPullMode.PullUp)\n\nfunction buttonPin(button: EtGamepad.Gamepad): number {\n    let pin = 0;\n    switch (button) {\n        case EtGamepad.Gamepad.Button1: pin = DigitalPin.P13; break;\n        case EtGamepad.Gamepad.Button2: pin = DigitalPin.P15; break;\n        case EtGamepad.Gamepad.Button3: pin = DigitalPin.P1; break;\n        case EtGamepad.Gamepad.Button4: pin = DigitalPin.P12; break;\n        case EtGamepad.Gamepad.Button5: pin = DigitalPin.P16; break;\n        case EtGamepad.Gamepad.Button6: pin = DigitalPin.P2; break;\n        case EtGamepad.Gamepad.Button7: pin = DigitalPin.P8; break;\n        case EtGamepad.Gamepad.Button8: pin = DigitalPin.P14; break;\n        case EtGamepad.Gamepad.Button9: pin = DigitalPin.P9; break;\n        case EtGamepad.Gamepad.Button10: pin = DigitalPin.P0; break;\n        case EtGamepad.Gamepad.Button11: pin = DigitalPin.P5; break;\n        case EtGamepad.Gamepad.Button12: pin = DigitalPin.P11; break;\n    }\n    return pin;\n}\n\nfunction getState(button: EtGamepad.Gamepad) : number {\n    let state = 0\n    switch (button) {\n        case EtGamepad.Gamepad.Button1: state = PRESSED1; break;\n        case EtGamepad.Gamepad.Button2: state = PRESSED2; break;\n        case EtGamepad.Gamepad.Button3: state = PRESSED3; break;\n        case EtGamepad.Gamepad.Button4: state = PRESSED4; break;\n        case EtGamepad.Gamepad.Button5: state = PRESSED5; break;\n        case EtGamepad.Gamepad.Button6: state = PRESSED6; break;\n        case EtGamepad.Gamepad.Button7: state = PRESSED7; break;\n        case EtGamepad.Gamepad.Button8: state = PRESSED8; break;\n        case EtGamepad.Gamepad.Button9: state = PRESSED9; break;\n        case EtGamepad.Gamepad.Button10: state = PRESSED10; break;\n        case EtGamepad.Gamepad.Button11: state = PRESSED11; break;\n        case EtGamepad.Gamepad.Button12: state = PRESSED12; break;\n    }\n    return state\n}\n\nfunction setState(button: EtGamepad.Gamepad, state: number) {\n    switch (button) {\n        case EtGamepad.Gamepad.Button1: PRESSED1 = state; break;\n        case EtGamepad.Gamepad.Button2: PRESSED2 = state; break;\n        case EtGamepad.Gamepad.Button3: PRESSED3 = state; break;\n        case EtGamepad.Gamepad.Button4: PRESSED4 = state; break;\n        case EtGamepad.Gamepad.Button5: PRESSED5 = state; break;\n        case EtGamepad.Gamepad.Button6: PRESSED6 = state; break;\n        case EtGamepad.Gamepad.Button7: PRESSED7 = state; break;\n        case EtGamepad.Gamepad.Button8: PRESSED8 = state; break;\n        case EtGamepad.Gamepad.Button9: PRESSED9 = state; break;\n        case EtGamepad.Gamepad.Button10: PRESSED10 = state; break;\n        case EtGamepad.Gamepad.Button11: PRESSED11 = state; break;\n        case EtGamepad.Gamepad.Button12: PRESSED12 = state; break;\n    }\n}\n\nfunction buttonState(button: EtGamepad.Gamepad) {\n    if (TIME > input.runningTime())\n        return\n    TIME = input.runningTime() + DELAY\n    let pin1 = buttonPin(button)\n    let oldstate = PRESSED[button]\n    let newstate = pins.digitalReadPin(pin1)\nif (pin1 == 113) return\nbasic.showNumber(newstate)\n    if (oldstate == newstate)\n        return\n    PRESSED[button] = newstate\nreturn\n    if (newstate)\n        radio.sendNumber(EtGamepad.Gamepad.Button12 + button) // released\n    radio.sendNumber(button) // pressed\n}\n\nbasic.forever(function () {\n    for (let i = EtGamepad.Gamepad.Button1; i <= EtGamepad.Gamepad.Button12; i++)\n        buttonState(i)\n})\n\ninput.onGesture(Gesture.LogoDown, function() {\n    GROUP += 1\n    if (GROUP > EtGamepad.Group.Group9)\n        GROUP = EtGamepad.Group.Group1\n    EtGamepad.setGroup(GROUP)\n    basic.showNumber(GROUP + 1)\n})\n\n//% block=\"set repeating time to $delay msec\"\n//% block.loc.nl=\"stel herhaaltijd in op $delay msec\"\n//% delay.defl=500\nfunction buttonDelay(delay: number) {\n    DELAY = delay\n}\n/*\n// inverted logic because of PullUp\n//% block=\"not button $button is pressed\"\n//% block.loc.nl=\"knop %button niet is ingedrukt\"\nfunction isButtonReleased(button: Gamepad): boolean {\n    let pin2 = buttonPin(button);\n    if (pins.digitalReadPin(pin2) == 0)\n        return false;\n    if (PINRELEASED == pin2 && TIME > input.runningTime())\n        return false;\n    TIME = input.runningTime() + DELAY\n    PINRELEASED = pin2\n    return true;\n}\n\n// inverted logic because of PullUp\n//% block=\"button $button is pressed\"\n//% block.loc.nl=\"knop %button is ingedrukt\"\nfunction isButtonPressed(button: Gamepad): boolean {\n    let pin3 = buttonPin(button);\n    if (pins.digitalReadPin(pin3) == 1)\n        return false;\n    if (PINPRESSED == pin3 && TIME > input.runningTime())\n        return false;\n    TIME = input.runningTime() + DELAY\n    PINPRESSED = pin3\n    return true;\n}\n*/","README.md":"","pxt.json":"{\n    \"name\": \"ElecTricks Gamepad\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-gamepad\": \"github:etmodules/pxt-gamepad#82c93accc17664eb6f42e05986ce19f016752518\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1737199531051,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"EtGamepad_setGroup\"><field name=\"group\">EtGamepad.Group.Group1</field><next><block type=\"basic_show_icon\"><field name=\"i\">IconNames.Heart</field></block></next></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-4\" y=\"201\"><field name=\"button\">EtGamepad.Button.Button1</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.North</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-4\" y=\"345\"><field name=\"button\">EtGamepad.Button.Button2</field><statement name=\"HANDLER\"><block type=\"basic_show_arrow\"><value name=\"i\"><shadow type=\"device_arrow\"><field name=\"arrow\">ArrowNames.South</field></shadow></value></block></statement></block><block type=\"EtGamepad_onButtonPressed\" x=\"-2\" y=\"492\"><field name=\"button\">EtGamepad.Button.Button12</field><statement name=\"HANDLER\"><block type=\"basic_show_icon\"><field name=\"i\">IconNames.No</field></block></statement></block></xml>","main.ts":"let GROUP = EtGamepad.Group.Group1\nlet DELAY = 50\nlet TIME: number = 0\nlet PRESSED = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n\nbasic.showNumber(GROUP+1)\n\npins.digitalWritePin(DigitalPin.P0, 1)\npins.digitalWritePin(DigitalPin.P1, 1)\npins.digitalWritePin(DigitalPin.P2, 1)\npins.digitalWritePin(DigitalPin.P8, 1)\npins.digitalWritePin(DigitalPin.P9, 1)\npins.digitalWritePin(DigitalPin.P11, 1)\npins.digitalWritePin(DigitalPin.P12, 1)\npins.digitalWritePin(DigitalPin.P13, 1)\npins.digitalWritePin(DigitalPin.P14, 1)\npins.digitalWritePin(DigitalPin.P15, 1)\npins.digitalWritePin(DigitalPin.P16, 1)\n\npins.setPull(DigitalPin.P0, PinPullMode.PullUp)\npins.setPull(DigitalPin.P1, PinPullMode.PullUp)\npins.setPull(DigitalPin.P2, PinPullMode.PullUp)\npins.setPull(DigitalPin.P5, PinPullMode.PullUp)\npins.setPull(DigitalPin.P8, PinPullMode.PullUp)\npins.setPull(DigitalPin.P9, PinPullMode.PullUp)\npins.setPull(DigitalPin.P11, PinPullMode.PullUp)\npins.setPull(DigitalPin.P12, PinPullMode.PullUp)\npins.setPull(DigitalPin.P13, PinPullMode.PullUp)\npins.setPull(DigitalPin.P14, PinPullMode.PullUp)\npins.setPull(DigitalPin.P15, PinPullMode.PullUp)\npins.setPull(DigitalPin.P16, PinPullMode.PullUp)\n\nfunction buttonPin(button: EtGamepad.Gamepad): number {\n    let pin = 0;\n    switch (button) {\n        case EtGamepad.Gamepad.Button1: pin = DigitalPin.P13; break;\n        case EtGamepad.Gamepad.Button2: pin = DigitalPin.P15; break;\n        case EtGamepad.Gamepad.Button3: pin = DigitalPin.P1; break;\n        case EtGamepad.Gamepad.Button4: pin = DigitalPin.P12; break;\n        case EtGamepad.Gamepad.Button5: pin = DigitalPin.P16; break;\n        case EtGamepad.Gamepad.Button6: pin = DigitalPin.P2; break;\n        case EtGamepad.Gamepad.Button7: pin = DigitalPin.P8; break;\n        case EtGamepad.Gamepad.Button8: pin = DigitalPin.P14; break;\n        case EtGamepad.Gamepad.Button9: pin = DigitalPin.P9; break;\n        case EtGamepad.Gamepad.Button10: pin = DigitalPin.P0; break;\n        case EtGamepad.Gamepad.Button11: pin = DigitalPin.P5; break;\n        case EtGamepad.Gamepad.Button12: pin = DigitalPin.P11; break;\n    }\n    return pin;\n}\n\nfunction buttonState(button: EtGamepad.Gamepad) {\n    let pin = buttonPin(button)\n    let newstate = 0\n    switch (button) {\n        case EtGamepad.Gamepad.Button1:\n            newstate = pins.digitalReadPin(DigitalPin.P13)\n            break\n        case EtGamepad.Gamepad.Button2:\n            newstate = pins.digitalReadPin(DigitalPin.P15)\n            break\n        case EtGamepad.Gamepad.Button3:\n            newstate = pins.digitalReadPin(DigitalPin.P1)\n            break\n        case EtGamepad.Gamepad.Button4:\n            newstate = pins.digitalReadPin(DigitalPin.P12)\n            break\n        case EtGamepad.Gamepad.Button5:\n            newstate = pins.digitalReadPin(DigitalPin.P16)\n            break\n        case EtGamepad.Gamepad.Button6:\n            newstate = pins.digitalReadPin(DigitalPin.P2; break;\n        case EtGamepad.Gamepad.Button7:\n            newstate = pins.digitalReadPin(DigitalPin.P8; break;\n        case EtGamepad.Gamepad.Button8:\n            newstate = pins.digitalReadPin(DigitalPin.P14; break;\n        case EtGamepad.Gamepad.Button9:\n            newstate = pins.digitalReadPin(DigitalPin.P9; break;\n        case EtGamepad.Gamepad.Button10:\n            newstate = pins.digitalReadPin(DigitalPin.P0; break;\n        case EtGamepad.Gamepad.Button11:\n            newstate = pins.digitalReadPin(DigitalPin.P5)\n            break\n        case EtGamepad.Gamepad.Button12:\n            newstate = pins.digitalReadPin(DigitalPin.P11)\n            break\n    }\n    let oldstate = PRESSED[button]\n    if (oldstate == newstate)\n        return\n    if (newstate)\n        button += EtGamepad.Gamepad.Button12\nbasic.showNumber(button)\n//    radio.sendNumber(button)\n}\n\nbasic.forever(function () {\n    for (let i = EtGamepad.Gamepad.Button1; i <= EtGamepad.Gamepad.Button12; i++)\n        buttonState(i)\n})\n\ninput.onGesture(Gesture.LogoDown, function() {\n    GROUP += 1\n    if (GROUP > EtGamepad.Group.Group9)\n        GROUP = EtGamepad.Group.Group1\n    EtGamepad.setGroup(GROUP)\n    basic.showNumber(GROUP + 1)\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"ElecTricks Gamepad\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-gamepad\": \"github:etmodules/pxt-gamepad#82c93accc17664eb6f42e05986ce19f016752518\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1737199902437}